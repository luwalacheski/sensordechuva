// VARI√ÅVEIS GLOBAIS
let carrinho = []; // Array que vai guardar os objetos dos produtos
const elementoContadorCarrinho = document.querySelector('.carrinho a');

// 1. FUN√á√ÉO PARA ADICIONAR UM PRODUTO AO CARRINHO
function adicionarAoCarrinho(nome, preco) {
    // Cria um objeto para o novo produto
    const novoProduto = {
        nome: nome,
        preco: preco,
        quantidade: 1
    };

    // Adiciona o produto ao array do carrinho
    carrinho.push(novoProduto);
    
    // Chama a fun√ß√£o para atualizar a interface do usu√°rio
    atualizarCarrinhoUI();
    
    // Feedback para o usu√°rio (opcional)
    alert(`${nome} adicionado ao carrinho!`);
}

// 2. FUN√á√ÉO PARA ATUALIZAR O CONTADOR DO CARRINHO (UI = User Interface)
function atualizarCarrinhoUI() {
    // Calcula o n√∫mero total de itens no carrinho
    const totalItens = carrinho.length;

    // Atualiza o texto do link do carrinho no cabe√ßalho
    // Ele mostrar√°: üõí Carrinho (2)
    elementoContadorCarrinho.textContent = `üõí Carrinho (${totalItens})`;
}


// 3. ADICIONAR ESCUTADORES DE EVENTO AOS BOT√ïES
// Este bloco garante que o c√≥digo s√≥ √© executado depois que o HTML √© totalmente carregado.
document.addEventListener('DOMContentLoaded', () => {
    
    // Seleciona todos os bot√µes com a classe 'adicionar-carrinho'
    const botoesAdicionar = document.querySelectorAll('.adicionar-carrinho');
    
    // Itera sobre cada bot√£o encontrado
    botoesAdicionar.forEach(botao => {
        botao.addEventListener('click', () => {
            
            // Pega o elemento pai do bot√£o (o 'div.produto-card')
            const card = botao.closest('.produto-card');
            
            // Extrai o nome do produto (do h3)
            const nomeProduto = card.querySelector('h3').textContent;
            
            // Extrai o pre√ßo (do p.preco), remove 'R$', v√≠rgulas e transforma em n√∫mero
            let precoTexto = card.querySelector('.preco').textContent;
            precoTexto = precoTexto.replace('R$', '').replace(',', '.').trim();
            const precoProduto = parseFloat(precoTexto);
            
            // Chama a fun√ß√£o principal para adicionar o item
            adicionarAoCarrinho(nomeProduto, precoProduto);
        });
    });
    
    // Inicializa o contador do carrinho ao carregar a p√°gina
    atualizarCarrinhoUI();
});
